% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/latexTable.R
\name{latexTable}
\alias{latexTable}
\title{Create a LaTeX table from a matrix.}
\usage{
latexTable(
  mat,
  SE_table = TRUE,
  headerFooter = TRUE,
  commandName = "myTable",
  callCommand = TRUE,
  label = commandName,
  landscape = if (SE_table) ncol(mat)/2 >= 6 else ncol(mat) >= 6,
  starredFloat = FALSE,
  horizOffset = "-0in",
  rowNames = rownames(mat),
  footerRows = if (is.null(rowNames)) NULL else c("Number of observations", rep("000",
    ncol(mat)/2)),
  colNames = colNames_default(),
  colNameExpand = FALSE,
  extraRowHeight = if (SE_table) "2pt" else "4pt",
  spacerColumns = spacerColumns_default(),
  spacerColumnsWidth = ".67em",
  spacerRows = NULL,
  spacerRowsHeight = ".15in",
  tabColSep = "2.75pt",
  spaceBetweenColNameRows = TRUE,
  columnTierSeparator = "  ",
  printCaption = TRUE,
  caption = paste0(label, "Caption"),
  captionMargins = NULL,
  formatNumbers = TRUE,
  decimalPlaces = 2,
  SE_fontSizeString = "\\\\fontsize{10.3bp}{10.3bp}\\\\selectfont",
  NA_text = "",
  writeToClipboard = FALSE
)
}
\arguments{
\item{mat}{Matrix of information to be displayed in a LaTeX table.}

\item{SE_table}{Logical variable that indicates whether \code{mat} contains
pairs of columns, with the first column in each pair containing estimates,
and the second column containing the corresponding standard errors.
(Matrices returned by \code{\link{regTable}} have this form.)
Defaults to \code{TRUE}. If \code{TRUE}, the even-numbered columns of \code{mat}
will be rendered in smaller type than the odd-numbered columns: that is,
the standard errors will be rendered in smaller type than their
corresponding estimates. This default behavior can be overridden by
the \code{SE_fontSizeString} argument.}

\item{headerFooter}{Logical variable. If \code{TRUE}, which is the default,
the output will be (or at least include) a LaTeX macro that generates a
table. For example, you will be able to produce a table simply by calling
\code{\\myTable{p}} or \code{\\myTable{h}} in your LaTeX code.\cr
\indent If \code{headerFooter} is \code{FALSE}, the only output of the
function will be rows from a LaTeX table (possibly including column
headers). The function may not produce valid LaTeX output if both
\code{SE_table} and \code{headerFooter} are \code{FALSE}.}

\item{commandName}{A string. It is the name of the macro that produces the
LaTeX table (if \code{headerFooter} is \code{TRUE}). By default, it is
"myTable"; you can change it to something more descriptive, e.g.,
"mainEstimates".}

\item{callCommand}{Logical variable. Should the last line of the
\code{latexTable} object be a a call to the macro that creates the table?
If \code{callCommand} is \code{TRUE}, which is the default, sourcing a
file that contains \code{latexTable} output---that is, by using
\code{\\input} or \code{\\include} in LaTeX---will produce a table when
your LaTeX document is rendered. If \code{callCommand} is \code{FALSE},
the macro that can create your table will be included in your LaTeX
document, but you will need to manually edit the LaTeX document to call
the macro and thereby produce a table when the LaTeX document is
rendered.}

\item{label}{A string. Specifies the LaTeX label for table. It is not printed
anywhere in the table or the caption, but references to the figure in
your LaTeX document (for example, references created by \code{\\ref} or
\code{\\autoref} must be include the label name. For simplicity, the
default \code{label} is \code{commandName}.\cr\cr\cr\cr}

\item{landscape}{Logical variable. Determines whether the table is printed
in landscape or in portrait mode. Affects the output only if if
\code{headerFooter == TRUE} and \code{callCommand == TRUE}.}

\item{starredFloat}{Logical variable that indicates whether the LaTeX
table should be specified with \code{table*} instead of \code{table}. The
default is FALSE, but you may want to set it to TRUE if you want you are
using a multi-column page layout in LaTeX and want the table to cross
both columns.}

\item{horizOffset}{A string that specifies a LaTeX length, e.g., ".25in".
When the LaTeX code produced by \code{latexTable} is rendered, the table
will be moved to the right by this length (or to the left if the length
is negative, e.g., "-.25in").\cr\cr\cr\cr}

\item{rowNames}{Character vector of labels for the rows in \code{mat}. The
labels will be printed to the left of each row in \code{mat}.
\code{rowNames} can be \code{NULL}.}

\item{footerRows}{List, or object that can be coerced to a list, of footer
rows. Information about N and \ifelse{html}{\out{R<sup>2</sup>}}{\eqn{R^2}}
is typically included in \code{footerRows}. Each element in the list
corresponds to a row in the footer. The first entry in each
\code{footerRows} list-element should be the row name for the corresponding
footer row (e.g., '$N$', '$R^2$').}

\item{colNames}{List, or object that can be coerced to a list, of column
headings. Typically, each element in the list is a character vector, and
the elements of the character vector specify the names of the table's
columns.\cr
\indent If \code{SE_table} is \code{TRUE} (the default), each column
name will appear over a pair of columns. In this case, each element in
the \code{colNames} list should contain \code{ncol(mat)/2} entries.\cr
\indent To specify multi-line column labels, use a list with multiple
elements. The entries in the first list element will then appear in the
top row of the column label, the entries in the second list element will
appear in the next row of the column label, and so{\NB}on.\cr
\indent By default, column names will be taken from \code{colnames(mat)}.
If \code{colnames(mat)} is \code{NULL}, columns will be numbered "(1)",
"(2)", etc. See \code{\link{colNames_default}()} for more information.}

\item{colNameExpand}{Logical variable. By default, an entry of '' in a
\code{colNames} list element---that is, an empty entry---indicates that a
column should have no column heading. But if \code{colNameExpand} is
\code{TRUE} and a text entry in a \code{colNames} list element is
followed by one or more '' entries, the column name specified by the text
entry will bridge the columns that have '' entries.\cr
\indent \code{colNameExpand} and \code{spacerColumns} do not play well
together. If you run \code{latexTable} with \code{colNameExpand == TRUE}
and a non-NULL \code{spacerColumns} argument, you will get LaTeX output,
but you will probably need to edit the "\\multicolumn" and "\\cmidrule"
commands in the output so that LaTeX can render the output.\cr\cr\cr\cr}

\item{extraRowHeight}{A string that specifies a length that LaTeX
recognizes, e.g., '2pt' or '.25in'. The \code{extrarowheight} length in
LaTeX will be set to \code{extraRowHeight}. In practice, this means that
the vertical space between every row will be increased by
\code{extraRowHeight}. This argument has no effect if \code{headerFooter}
is \code{FALSE}.}

\item{spacerColumns}{A vector of integers. Specifies columns in \code{mat}
after which to insert columns that contain no entries. These "spacer
columns" are used to insert horizontal space into the typeset table. By
default, spacerColumns are specified by a helper function,
\code{spacerColumns_default()}:
\itemize{
\item If \code{SE_table} is \code{FALSE}, there is a spacer column between
every column in \code{mat}.
\item If \code{SE_table} is \code{TRUE}, there is a spacer column after
every even-numbered column in \code{mat}, except for the last column.
\item If \code{rowNames} is not \code{NULL}, a spacer column is inserted
between the table's row names and the first column of data.\improveCSS\cr
\indent To add a spacerColumn between the rownames and the first data column,
make 0 one of the values in spacerColumns.\cr
\indent \code{colNameExpand} and \code{spacerColumns} do not play well
together. If you run \code{latexTable} with \code{colNameExpand == TRUE}
and a non-NULL \code{spacerColumns} argument, you will get LaTeX output,
but you will probably need to edit the "\\multicolumn" and "\\cmidrule"
commands in the output so that LaTeX can render the output.\cr
\indent See below for a technical note on \code{spacerColumns} and column
spacing in LaTeX.
}}

\item{spacerColumnsWidth}{Either a single string of a recognizable LaTeX
length (e.g., '.5em') or a character vector indicating the width of each
spacer column. Has no effect unless \code{headerFooter} is \code{TRUE}.}

\item{spacerRows}{A vector of integers. After each row in \code{mat} whose
number is in \code{spacerRows}, a vertical space of \code{spacerRowsHeight}
will be printed. For example, if \code{spacerRows == c(2, 4)}, a vertical
space will be added after rows 2 and 4 of \code{mat}.}

\item{spacerRowsHeight}{A string that specifies a recognizable LaTeX length,
e.g., ".15in".}

\item{tabColSep}{Character vector indicating a length that LaTeX recognizes,
e.g., ".25in". The \code{tabcolsep} value in LaTeX will be set to this
value if \code{headerFooter} is \code{TRUE}. If \code{SE_table} is
\code{TRUE}, \code{tabColSep} will be the default distance between the
estimate and the SE column in each column pair, and it will be half of the
distance between column pairs. If \code{SE_table} is FALSE,
\code{tabColSep} will simply be half of the default distance between
columns. These distances between columns can be increased by the
\code{spacerColumns} argument.}

\item{spaceBetweenColNameRows}{Logical variable. If \code{TRUE}, it adds a
little space between the rows that specify column names. It has an effect
only when the column names are split across multiple rows, i.e., when
\code{length(colNames) > 1}.}

\item{columnTierSeparator}{A string. In the LaTeX code generated by
\code{latexTable}, all columns are separated from each other by " & ".
Column tiers -- that is, pairs of columns giving the estimate and the SE
for a particular coefficient -- are further separated by
\code{columnTierSeparator}, which defaults to two spaces ('  '). This
option affects only the LaTeX code produced by \code{latexTable}; it
exists to make the LaTeX code more readable. It does not affect the
typeset (e.g., PDF) version of the table.\cr\cr\cr\cr}

\item{printCaption}{Logical variable.}

\item{caption}{A string. It can include LaTeX commands, e.g.,
"\\\\textit{Results from a minimal specification.}"}

\item{captionMargins}{A vector of two strings that specify the margins of
the caption. The strings should be LaTeX lengths, e.g., ".25in" or ".67em".
By default, \code{captionMargins} is \code{NULL}.\cr\cr\cr\cr}

\item{formatNumbers}{Logical variable. Pretty-print the entries in mat,
e.g., by adjusting the number of digits after the decimal place.}

\item{decimalPlaces}{Integer. If \code{formatNumbers} is \code{TRUE}, table
entries will be shown to this decimal place. For example, if
\code{decimalPlaces==2}, both "3.0035" and "3" will become "3.00."\cr
\indent If \code{formatNumbers} is \code{FALSE}, entries will not be adjusted,
but \code{decimalPlaces} will still be used to determine the widths of
columns and some aspects of column spacing.}

\item{SE_fontSizeString}{A string. Indicates how standard errors are to be
formatted when \code{SE_table} is \code{TRUE}. Defaults to
\code{\\\\fontsize{10.3bp}{10.3bp}\\\\selectfont}, which renders standard
errors in slightly smaller type than the corresponding estimates.}

\item{NA_text}{A string. \code{NA} entries in \code{mat} will be replaced
by the string.\cr\cr\cr\cr}

\item{writeToClipboard}{Logical variable. Copy entire output to clipboard.
Useful if you want to paste the output directly into a \code{.tex} file.
Works only on Windows.}
}
\value{
An object of class \code{latexTable} and \code{character}. The
returned object is a vector of strings of LaTeX code; each string is a line
in a LaTeX macro that can create a table. (There is one small exception. If
\code{callCommand} is \code{TRUE}, the last line is not part of the macro;
instead, it calls the macro, thereby telling LaTeX to display the table).
}
\description{
\code{latexTable} takes a single matrix, \code{mat}. By default, it returns
a LaTeX macro that creates a well-formatted LaTeX table. It can take many
arguments to adjust the table's formatting.\improveCSS
}
\note{
\link{SEE THE VIGNETTE FOR BENEFITS.}
\emph{Creating PDF tables.} \code{latexTable} tables can be transformed to
PDF with \code{\link{latexTablePDF}}.\cr\cr
\emph{Adjusting LaTeX code "by hand."} Because the returned object is of
the \code{character} class (in addition to the \code{latexTable} class), it
can easily be tweaked "by hand" in R after it is generated. And in some
cases, tweaking may be necessary to get the desired appearance.\cr
\indent In particular, the formatting of each column is specified with
\code{numprint} codes, and these rules may need to be tweaked. For example,
if your column names are long (and not split across multiple lines), you
may want to modify the object that \code{latexTable} returns.
Specifically, you may want to change \code{N{2}{2}} in
the estimate-column specification to \code{N{3}{2}} or \code{N{4}{2}} to
get the column pair centered beneath its heading. See the \href{http://mirrors.ctan.org/macros/latex/contrib/numprint/numprint.pdf}{documentation for
the \code{numprint} LaTeX package} for more information on \code{numprint}
column specifications like \code{N{2}{2}}.\cr\cr
\emph{Required LaTeX packages.} The LaTeX code produced by the
\code{latexTable} makes use of capabilities provided by the \code{array},
\code{booktabs}, \code{caption}, and \code{numprint} LaTeX packages. If
you haven't installed those LaTeX packages, you won't be able to render
the tables produced by \code{latexTable}.\cr\cr
\emph{Changes from pre-release versions:}
\itemize{
\item The names of some arguments have
changed slightly since the pre-release versions of this function. They have
been changed to enforce consistency: camelCase is used for all arguments,
and every acronym is followed by an underscore (_) character. We thus have
\code{SE_table} instead of \code{SEtable}, \code{tabColSep} instead of
\code{tabcolsep}, and so{\NB}on.
\item Some default arguments have changed. In particular, the default
\code{spacerColumns} argument is no longer \code{NULL}. Instead, the
default is to insert spacer columns in appropriate places. See documentation
of the \code{spacerColumns} argument for details.
}
}
\examples{
data(iris)
lm1 <- lm(Sepal.Length ~ Petal.Length,               data = iris)
lm2 <- lm(Sepal.Length ~ Petal.Length + Petal.Width, data = iris)
rT1 <- regTable(list(lm1, lm2))
latexTable(rT1)
latexTable(rT1, headerFooter = FALSE, spacerColumns = c(0, 2))
latexTable(rT1, colNames = qw("(1) (2)"))
latexTable(
  mat         = rT1,
  commandName = 'mainEstimates',
  caption     = "Each entry is an estimate or a standard error from a separate OLS regression. This table corresponds exactly to \\\\autoref{SomeFigure}; the difference is that it presents the estimates and standard errors in tabular form rather than graphically."
) 
latexTable(mat = matrix(1:16, nrow=4), colNames = 1:2)
latexTable(
  mat = matrix(1:16, nrow=2), 
  colNames = c('1', '', '', 4))
latexTable(
  mat = matrix(1:16, nrow=2), 
  colNames = c('1', '', '3', '4'),
  colNameExpand = TRUE)
latexTable(                                      
  mat           = matrix(1:16, nrow=4), 
  colNames      = c('One big heading', ''),
  colNameExpand = TRUE)
latexTable(
  mat           = matrix(1:16, nrow=4),
  rowNames      = 1:4,
  colNames      = c('One big heading', ''),
  colNameExpand = TRUE)
latexTable(
  mat           = matrix(1:16, nrow=4), 
  colNames      = 1:2,
  rowNames      = qw("a b c d"),
  spacerColumns = c(0, 2))
}
\seealso{
Other functions for making tables: 
\code{\link{latexTablePDF}()},
\code{\link{regTable}()}
}
\concept{Tufte}
\concept{functions for making tables}
\concept{table}
\concept{tables}
