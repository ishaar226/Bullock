% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/latexTable.R
\name{latexTable}
\alias{latexTable}
\title{Create a LaTeX table from a matrix.}
\usage{
latexTable(
  mat,
  SE_table = TRUE,
  starredFloat = FALSE,
  rowNames = rownames(mat),
  colNames = colnames(mat)[seq(1, ncol(mat), by = 2)],
  colNameExpand = FALSE,
  formatNumbers = TRUE,
  decimalPlaces = 2,
  NA_text = "",
  columnTierSeparator = "  ",
  extraRowHeight = if (SE_table) "2pt" else "4pt",
  tabColSep = "2.75pt",
  horizOffset = "-0in",
  headerFooter = TRUE,
  spaceBetweenColNameRows = TRUE,
  landscape = if (SE_table) ncol(mat)/2 >= 6 else ncol(mat) >= 6,
  SE_fontSizeString = "\\\\fontsize{10.3bp}{10.3bp}\\\\selectfont",
  spacerColumns = NULL,
  spacerColumnsWidth = ".5em",
  spacerRows = NULL,
  spacerRowsHeight = ".15in",
  footerRows = if (is.null(rowNames)) NULL else c("Number of observations", rep("000",
    ncol(mat)/2)),
  printCaption = TRUE,
  caption = paste0("\\\\", label, "Caption"),
  captionMargins = NULL,
  commandName = "myTable",
  label = commandName,
  callCommand = TRUE,
  writeToClipboard = Sys.info()["sysname"] == "Windows"
)
}
\arguments{
\item{mat}{Matrix of information to be displayed in a LaTeX table.}

\item{SE_table}{Logical variable that indicates whether the table contains
pairs of columns, with the first column in each pair containing estimates,
and the second column containing the corresponding standard errors.
Defaults to TRUE. If \code{TRUE}, the even-numbered columns of \code{mat}
will be rendered in smaller type than the odd-numbered columns: that is,
the standard errors will be rendered in smaller type than their 
corresponding estimates. This default behavior can be overridden by 
the \code{SE_fontSizeString} argument.}

\item{starredFloat}{Logical variable that indicates whether the LaTeX 
table should be specified with \code{table*} instead of \code{table}. The
default is FALSE, but you may want to set it to TRUE if you want you are 
using a multi-column page layout in LaTeX and want the table to cross 
both columns.}

\item{rowNames}{Character vector of labels for the rows in \code{mat}. The
labels will be printed to the left of each row in \code{mat}.
\code{rowNames} can be \code{NULL}.}

\item{colNames}{List, or object that can be coerced to a list, of column
headings. Typically, each element in the list is a character vector, and 
the elements of the character vector specify the names of the table's
columns. 
    If \code{SE_table} is \code{TRUE} (the default), each column name will
appear over a pair of columns. In this case, each element in the
\code{colNames} list should contain \code{ncol(mat)/2} entries.
    To specify multi-line column labels, use a list with multiple 
elements. The entries in the first list element will then appear in the 
top row of the column label, the entries in the second list element will 
appear in the next row of the column label, and so~on.}

\item{colNameExpand}{Logical variable. By default, an entry of '' in a
\code{colNames} list element---that is, an empty entry---indicates that a 
column should have no column heading. But if \code{colNameExpand} is 
\code{TRUE} and a text entry in a \code{colNames} list element is 
followed by one or more '' entries, the column name specified by the text
entry will bridge the columns that have '' entries.}

\item{formatNumbers}{Logical variable. Pretty-print the entries in mat, 
e.g., by adjusting the number of digits after the decimal place.}

\item{decimalPlaces}{Integer. If \code{formatNumbers} is \code{TRUE}, table 
entries will be shown to this decimal place. For example, if 
\code{decimalPlaces==2}, both "3.0035" and "3" will become "3.00."
  If \code{formatNumbers} is \code{FALSE}, entries will not be adjusted,
but \code{decimalPlaces} will still be used to determine the widths of 
columns and some aspects of column spacing.}

\item{NA_text}{A string. \code{NA} entries in \code{mat} will be replaced 
by the string.}

\item{columnTierSeparator}{A string. In the LaTeX code generated by 
\code{latexTable}, all columns are separated from each other by " & ".  
Column tiers -- that is, pairs of columns giving the estimate and the SE 
for a particular coefficient -- are further separated by 
\code{columnTierSeparator}, which defaults to two spaces ('  '). This 
option affects only the LaTeX code produced by \code{latexTable}; it 
exists to make the LaTeX code more readable. It does not affect the 
typeset (e.g., PDF) version of the table.}

\item{extraRowHeight}{A string that specifies a length that LaTeX 
recognizes, e.g., '2pt' or '.25in'. The \code{extrarowheight} length in 
LaTeX will be set to \code{extraRowHeight}. In practice, this means that
the vertical space between every row will be increased by 
\code{extraRowHeight}. This argument has no effect if \code{headerFooter} 
is \code{FALSE}.}

\item{tabColSep}{Character vector indicating a length that LaTeX recognizes,
e.g., ".25in". The \code{tabcolsep} value in LaTeX will be set to this 
value if \code{headerFooter} is \code{TRUE}. If \code{SE_table} is 
\code{TRUE}, \code{tabColSep} will be the default distance between the  
estimate and the SE column in each column pair, and it will be half of the 
distance between column pairs. If \code{SE_table} is FALSE, 
\code{tabColSep} will simply be half of the default distance between 
columns. These distances between columns can be increased by the
\code{spacerColumns} argument.}

\item{horizOffset}{A string that specifies a LaTeX length, e.g., ".25in".
When the LaTeX code produced by \code{latexTable} is rendered, the table
will be moved to the right by this length (or to the left if the length 
is negative, e.g., "-.25in").}

\item{headerFooter}{Logical variable. If \code{TRUE}, which is the default,
the output will be (or at least include) a LaTeX macro that generates a 
table. For example, you will be able to produce a table simply by calling
\code{\\myTable{p}} or \code{\\myTable{h}} in your LaTeX code. 
    If \code{headerFooter} is \code{FALSE}, the only output of the 
function will be rows from a LaTeX table (possibly including column   
headers). The function may not produce valid LaTeX output if both   
\code{SE_table} and \code{headerFooter} are \code{FALSE}.}

\item{spaceBetweenColNameRows}{Logical variable. If \code{TRUE}, it adds a 
little space between the rows that specify column names. It has an effect
only when the column names are split across multiple rows, i.e., when 
\code{length(colNames) > 1}.}

\item{landscape}{Logical variable. Determines whether the table is printed 
in landscape or in portrait mode. Affects the output only if if 
\code{headerFooter == TRUE} and \code{callCommand == TRUE}.}

\item{SE_fontSizeString}{A string. Indicates how standard errors are to be 
formatted when \code{SE_table} is \code{TRUE}. Defaults to 
\code{\\\\fontsize{10.3bp}{10.3bp}\\\\selectfont}, which renders standard
errors in slightly smaller type than the corresponding estimates.}

\item{spacerColumns}{A vector of integers. Specifies columns in \code{mat} 
after which to insert columns that contain no entries. These "spacer 
columns" are used to insert horizontal space into the typeset table. 
    To add a spacerColumn between the rownames and the first data column, 
make 0 one of the values in spacerColumns.
    See below for a technical note on \code{spacerColumns} and column  
spacing in LaTeX.}

\item{spacerColumnsWidth}{Either a single string of a recognizable LaTeX 
length (e.g., '.5em') or a character vector indicating the width of each 
spacer column.}

\item{spacerRows}{A vector of integers. After each row in \code{mat} whose
number is in \code{spacerRows}, a vertical space of \code{spacerRowsHeight}
will be printed. For example, if \code{spacerRows == c(2, 4)}, a vertical 
space will be added after rows 2 and 4 of \code{mat}.}

\item{spacerRowsHeight}{A string that specifies a recognizable LaTeX length,
e.g., ".15in".}

\item{footerRows}{List, or object that can be coerced to a list, of footer
rows. Information about N and \ifelse{html}{\out{R<sup>2</sup>}}{\eqn{R^2}} 
is typically included in \code{footerRows}. Each element in the list 
corresponds to a row in the footer. The first entry in each 
\code{footerRows} list-element should be the row name for the corresponding 
footer row (e.g., '$N$', '$R^2$').}

\item{printCaption}{Logical variable.}

\item{caption}{A string. It can include LaTeX commands, e.g., 
"\\\\textit{Results from a minimal specification.}"}

\item{captionMargins}{A pair of strings that specify the margins of the 
caption. The strings should be LaTeX lengths, e.g., ".25in" or ".67em".
By default, \code{captionMargins} is \code{NULL}.}

\item{commandName}{A string. It is the name of the macro that produces the
LaTeX table (if \code{headerFooter} is \code{TRUE}). By default, it is 
"myTable"; you can change it to something more descriptive, e.g., 
"mainEstimates".}

\item{label}{A string. Specifies the LaTeX label for table. It is not printed
anywhere in the table or the caption, but references to the figure in 
your LaTeX document (for example, references created by \code{\\ref} or 
\code{\\autoref} must be include the label name. For simplicity, the 
default \code{label} is \code{commandName}.}

\item{callCommand}{Logical variable. Should the last line of the
\code{latexTable} object be a a call to the macro that creates the table?
If \code{callCommand} is \code{TRUE}, which is the default, sourcing a 
file that contains \code{latexTable} output---that is, by using
\code{\\input} or \code{\\include} in LaTeX---will produce a table when 
your LaTeX document is rendered. If \code{callCommand} is \code{FALSE}, 
the macro that can create your table will be included in your LaTeX 
document, but you will need to manually edit the LaTeX document to call 
the macro and thereby produce a table when the LaTeX document is 
rendered.}

\item{writeToClipboard}{Logical variable. Copy entire output to clipboard. 
Useful if you want to paste the output directly into a \code{.tex} file.
Works only on Windows.}
}
\value{
An object of class \code{latexTable} and \code{character}. The 
returned object is a vector of strings of LaTeX code; each string is a row
in a LaTeX table. Assigning the \code{latexTable} class ensures that, by 
default, \code{print.latexTable} will be used to print the object to screen.
}
\description{
\code{latexTable} takes a single matrix, \code{mat}. By default, it returns 
a LaTeX macro that creates a well-formatted LaTeX table. It can take many 
arguments to adjust the table's formatting.
}
\details{
The point of \code{latexTable} is to maximize flexibility in the formatting 
of LaTeX tables. The function's arguments permit much flexibility, and 
because the returned object is of the \code{character} class (in addition 
to the \code{latexTable} class), it can easily be tweaked "by hand" after  
it is generated.

One particular benefit of \code{latexTable} is that, by default, it will 
produce regression tables in which standard errors are positioned to the 
right of their corresponding estimates, and in smaller type. This design of
regression tables is in contrast to conventional design, whereby standard 
errors appear in parentheses beneath the corresponding estimates. This is 
a "Tufte" design: to my knowledge, it was first used in his Edward Tufte's 
essay on "The Cognitive Style of PowerPoint."

A second benefit of \code{latexTable} is that it uses sane defaults for 
table formatting. That is, it produces tables with (a){\NB}no vertical rules, 
(b){\NB}few horizontal rules, and (c){\NB}sensible spacing between rows and 
columns. The result is tables that are easier to read than normal tables:
when looking at a table created with \code{latexTable}, you will not need
to squint, or indeed to work at all, to figure out whether a given number 
corresponds to this variable or to that{\NB}one.

A third benefit of \code{latexTable} is that, by default, it returns not 
just the LaTeX code for a table but a LaTeX macro that produces the table.
The macro can be placed at any point in your LaTeX document; it does not 
need to be placed where you want the table to appear. To put the table 
where you want it in your LaTeX document, you need only use a single line 
of LaTeX code. For example, if \code{latexTable} produces a macro called
"myTable", you can place the table in your LaTeX document by inserting 
the line \code{\\myTable{p}} anywhere in your document. And because the 
macro that defines the table can be placed elsewhere, your LaTeX document
can be far less cluttered than it would be if you had to define the entire 
table in the middle of your document.

Some tweaking of the output by hand may still be necessary to get the desired 
appearance. In particular, the formatting of each column is specified in 
the LaTeX code by rules given by the \code{numprint} LaTeX package, and 
these rules may need to be tweaked. For example, if \code{SE_table == TRUE}
and a column-pair has a long column names (that is, a long \code{colNames} 
entry), you may need to modify the \code{latexTable} object that this 
function produces. Specifically, you may want to change \code{N{2}{2}} in 
the estimate-column specification to \code{N{3}{2}} or \code{N{4}{2}} to 
get the column pair centered beneath its heading. See the documentation for  
the \code{numprint} LaTeX package for more information on \code{numprint} 
column specifications like \code{N{2}{2}}.

\code{latexTable} tables can be transformed to PDF with 
\code{latexTablePDF}.
}
\note{
\emph{Required LaTeX packages.} The LaTeX code produced by the  
 \code{latexTable} makes use of capabilities provided by the \code{array}, 
 \code{booktabs}, and \code{numprint} LaTeX packages. If you haven't 
installed those LaTeX packages, you won't be able to render the tables 
produced by \code{latexTable}. 

\emph{Column spacing in LaTeX.} Ordinary methods for inserting space 
  between columns involve the \code{\\tabcolsep} and \code{\\extracolsep} 
  LaTeX lengths.  Unfortunately, \code{\\cmidrule} and other \code{booktabs} 
  commands don't recognize that these LaTeX lengths are spaces \emph{between} 
  columns. As a result, rules (horizontal lines) drawn by \code{booktabs} 
  commands extend into the intercolumn region if \code{\\tabcolsep} and 
  \code{\\extracolsep} are used to provide intercolumn space. A similar 
  problem occurs if \code{\\hspace} is used to provide intercolumn space.
      Thus, to fine-tune the spacing of the LaTeX tables produced by 
  \code{latexTable}, blank columns can be inserted at arbitrary positions 
  via the \code{spacerColumns} argument. This is a clunky way to adjust 
  intercolumn space, but it solves the problem of positioning horizontal 
  rules. In addition, no other approach affords the flexibility to insert 
  horizontal space at arbitrary positions (useful for distinguishing tiers 
  of columns from each other), and no other approach allows variation in
  the widths of the spaces between columns. 
 
\emph{Changes from pre-release versions.} The names of some arguments have 
changed slightly since the pre-release versions of this function. They have  
been changed to enforce consistency: camelCase is used for all arguments,  
and every acronym is followed by an underscore (_) character. We thus have  
\code{SE_table} instead of \code{SEtable}, \code{tabColSep} instead of 
\code{tabcolsep}, and so{\NB}on.
}
\concept{Tufte}
\concept{table}
\concept{tables}
