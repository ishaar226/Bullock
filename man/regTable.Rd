% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/regTable.R
\name{regTable}
\alias{regTable}
\title{Create a matrix of regression output from a list of regression models.}
\usage{
regTable(
  objList,
  colNames = NULL,
  rowsToRemove = NULL,
  rowsToKeep = NULL,
  clusterSEs = FALSE,
  clusterVar = NULL
)
}
\arguments{
\item{objList}{list of regression objects. They may be of class \code{lm},
\code{plm}, or \code{ivreg}. This is the only required argument.}

\item{colNames}{A vector of strings as long as \code{length(objList)}.}

\item{rowsToRemove}{A vector of strings, which may specify regular 
expressions. Variables in the regressions whose names match the strings will 
be omitted from the \code{regTable} output. This argument overrides 
\code{rowsToKeep.}}

\item{rowsToKeep}{A vector of strings, which may specify regular 
expressions. Variables in the regressions whose names match the strings will 
be kept in the \code{regTable} output. All other variables will be omitted.
    Before \code{regTable} was incorporated into this package,
it used the \code{rowsToKeep} argument differently: variables were kept 
only if the beginnings of their names matched the strings in 
\code{rowsToKeep}.}

\item{clusterSEs}{A logical scalar. If \code{TRUE}, the reported standard 
errors will be clustered at the level specified by \code{clusterVar}.}

\item{clusterVar}{A list of length \code{length(objList)}. Each element in 
the list indicates the clusters for the corresponding regression object in
\code{objList}. If the regressions in \code{objList} are of class \code{lm},
\code{clusterVar} is passed to \code{multiwayvcov::cluster.vcov}. If the 
 regressions in \code{objList} are instead of class \code{ivreg},
\code{clustervar} is passed to \code{ivpack::cluster.robust.se}.}
}
\description{
\code{regTable} takes a list of regression models, \code{objList}. It
returns a matrix in which the columns are estimates and standard errors -- 
two columns for each model.
}
\examples{
data(iris)
lm1 <- lm(Sepal.Length ~ Petal.Length,               data = iris)
lm2 <- lm(Sepal.Length ~ Petal.Length + Petal.Width, data = iris)
regTable(list(lm1, lm2))
regTable(list(lm1, lm2), colNames = c("Sepal length", "Sepal width"))
regTable(list(lm1, lm2), rowsToKeep = 'Length')
regTable(list(lm1, lm2), rowsToKeep = c('Intercept', 'Length'))
}
